"""Subclass of MyFrame, which is generated by wxFormBuilder."""
import wx
import mwhois2
import mwhois.const as CONST  

from controller import SingleSearchThread, MultiSearchThread
from util import WhoisClientUtil

# Implementing MyFrame
class MainGUI( mwhois2.MyFrame ):
	
	def __init__( self, parent ):
		
		mwhois2.MyFrame.__init__( self, parent )
		self.worker = None
		self.history_select = False
		self.m_textctrl_domain.SetFocus()
		
		"""Setup post event Id's"""
		self.SINGLE_SEARCH_EVT_RESULT_ID = wx.NewId()
		self.MULTI_SEARCH_EVT_RESULT_ID = wx.NewId()
		self.SINGLE_SEARCH_EVT_ERROR_ID = wx.NewId()
		self.MULTI_SEARCH_EVT_ERROR_ID = wx.NewId()
		self.HISTORY_DISPLAY_EVT_ID = wx.NewId()
		
		"""Bind post event functions """
		self.post_whois_search_result(self,self.do_whois_search_result)
		self.post_multi_whois_search_result(self,self.do_whois_multi_search_result)
		self.post_whois_search_error(self,self.do_whois_search_error)
		self.post_multi_whois_search_error(self,self.do_whois_multi_search_error)
		self.post_history_search(self,self.do_display_history_search)

	""" Post event functions """
	
	def post_whois_search_result(self, win, func):
		
		win.Connect(-1, -1, self.SINGLE_SEARCH_EVT_RESULT_ID, func)
	
	def post_multi_whois_search_result(self, win, func):
		
		win.Connect(-1, -1, self.MULTI_SEARCH_EVT_RESULT_ID, func)
		
	def post_whois_search_error(self, win, func):
		
		win.Connect(-1, -1, self.SINGLE_SEARCH_EVT_ERROR_ID, func)
	
	def post_multi_whois_search_error(self, win, func):
		
		win.Connect(-1, -1, self.MULTI_SEARCH_EVT_ERROR_ID, func)
		
	def post_history_search(self, win, func):
		
		win.Connect(-1, -1, self.HISTORY_DISPLAY_EVT_ID, func)
	
	""" UI events """ 
	
	# Handlers for MyFrame events.
	def create_new_tab( self, event ):
		# TODO: Implement create_new_tab
		pass
	
	def do_save_results( self, event ):
		# TODO: Implement do_save_results
		pass
	
	def do_print_results( self, event ):
		# TODO: Implement do_print_results
		pass
	
	def close_app( self, event ):
		
		wx.Window.Close(self, force=False)
	
	def open_about_dialog( self, event ):
		
		pass
	
	def set_preveiw_results( self, event ):
		# TODO: Implement set_preveiw_results
		pass
	
	def do_whois_search( self, event ):
		
		self.m_button_single_search.Enable(False)
		self.m_textctrl_results.Clear()
		
		if not self.worker:
			print('self.worker is None')
			self.worker = SingleSearchThread(self)
			self.worker.start()

	def do_whois_search_result( self, event ):
		
		self.history_select = False
		self.m_textctrl_results.SetValue(event.data[0])
		self.m_textctrl_domain.Clear()
		self.m_combobox_whoisserver.Clear()
		self.m_button_single_search.Enable(True)
		
		if event.data[1] == 2:
			self.m_static_is_alive.SetLabel('')
		
		else:
			if event.data[1] == CONST.DOMAIN_DEAD:
				self.m_static_is_alive.SetForegroundColour('Green')
				self.m_static_is_alive.SetLabel('Available')
			else:
				self.m_static_is_alive.SetForegroundColour('Red')
				self.m_static_is_alive.SetLabel('Not Available')
		
		self.worker = None
		
	def do_whois_search_error( self, event ):
		
		self.m_textctrl_domain.Clear()
		self.m_combobox_whoisserver.Clear()
		self.m_textctrl_results.SetValue(event.data[0])
		self.m_button_single_search.Enable(True)
		self.worker = None
			
	def open_file_select( self, event ):
		
		self.dialog = wx.FileDialog (None, style=wx.OPEN)
		if self.dialog.ShowModal() == wx.ID_OK:
			self.m_textctrl_file.SetValue(self.dialog.GetPath())
		else:
			self.dialog.Destroy()
			
	def set_dead_only( self, event ):
		
		pass
	
	def set_sleep( self, event ):
		
		pass
	
	def do_multi_search( self, event ):
		
		self.m_button_begin.Enable(False)
		self.m_listctrl_multi.ClearAll()
		if not self.worker:
			self.worker = MultiSearchThread(self)
			self.worker.start()
			
	def do_whois_multi_search_result(self, event):
		
		self.m_button_begin.Enable(True)
		self.m_listctrl_multi.Append(event.data)
		
		self.worker = None
		
	def do_whois_multi_search_error(self, event):
		
		self.m_button_begin.Enable(True)
		self.m_listctrl_multi.Append(event.data)
		
		self.worker = None
	
	def on_tld_combo_select( self, event ):
		
		pass
	
	def on_gtld_combo_select( self, event ):
		
		pass
	
	
	def do_history_search( self, event ):
		
		self.history_select = True
		self.do_whois_search(self)
			
	def do_display_history_search(self, event):
		
		self.m_listbox_history.Append(event.data[0])
		
	def clear_history( self, event ):
		
		self.m_listbox_history.Clear()
		
	def do_whois_map( self, event ):
		
		self.m_combobox_whoisserver.Clear()
		get_domain = self.m_textctrl_domain.GetValue()
		whois_map = WhoisClientUtil().map_whois_server(get_domain)
		
		if whois_map != None:
			for map_list in whois_map:
				self.m_combobox_whoisserver.Append(map_list)
				self.m_combobox_whoisserver.SetSelection(0)

	
	
	
""" Main run """ 		
if __name__ == "__main__":
	app = wx.App(False)
	frame = MainGUI(None)
	frame.Show(True)
	app.MainLoop()	
