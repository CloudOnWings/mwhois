{"name":"mwhois - beta","tagline":"mwhois is a small python whois search module capable of finding multiple available domains via a file or list type. It's a good way to search for domains that are available to buy.","body":"mwhois\r\n=====\r\n*** \r\n\r\nwhois is a small python whois search module capable of finding multiple available domains via a file or list type. It's a good way to search for domains that are available to buy. (http://jrosco.github.io/mwhois)\r\n\r\nFeatures \r\n* Search for Single domains \r\n* Search for multiple domains \r\n* Show only available domains   \r\n* 100 searchable tld's \r\n\r\nFeatures to come\r\n* TODO: Caching results for quicker responses and avoid exceeding query limits\r\n* TODO: Print results to csv and pdf\r\n* TODO: Search second whois server if first one fails\r\n* TODO: Ability to connect to whois proxy\r\n\r\nHow to use mwhois python module \r\n---\r\n![](http://www.sbg.bio.ic.ac.uk/phyre2/html/images/infoIcon.gif)Note: In beta, use with caution, criticism welcomed\r\n***\r\nInstall \r\n---- \r\n1. Clone repo(requires git to be installed): <code>git clone https://github.com/jrosco/mwhois.git mwhois </code>\r\n   or\r\n   Download Zip File to the right (https://github.com/jrosco/mwhois/archive/master.zip)\r\n2. Unzip mwhois-master.zip\r\n3. cd mwhois-master/mwhois2\r\n4. Run: python setup.py install\r\n5. See examples below on how to use this these modules (These are also shown in mwhois2/src/examples/examples.py)\r\n\r\nUsage\r\n---\r\n<pre>\r\n# \"\"\"Get the whois server url by providing a domain name\"\"\"\r\n# from mwhois.whois import WhoisInfo\r\n#   \r\n# w = WhoisInfo()\r\n# w.domain = \"on.net\"\r\n# whoisserver = w.get_whois_server()\r\n# print(whoisserver)\r\n#   \r\n#   \r\n# \"\"\"Get 'not found' text on whois server by providing a domain name\"\"\"\r\n# from mwhois.whois import WhoisInfo\r\n#  \r\n# w2 = WhoisInfo()\r\n# w2.domain = \"ping.net\"\r\n# w2.get_domain_tld()\r\n# txt = w2.tld_not_found_text()\r\n# print(txt)\r\n#  \r\n# \"\"\"Get 'not found' text on whois server by providing a tld .e.g .com)\"\"\"\r\n# from mwhois.whois import WhoisInfo\r\n#  \r\n# w3 = WhoisInfo()\r\n# w3.tld = \"jp\"\r\n# txt2 = w3.tld_not_found_text()\r\n# print(txt2)\r\n#  \r\n# \"\"\"Single domain search\"\"\"\r\n# from mwhois.whosearch import WhoisSearch\r\n#  \r\n# s = WhoisSearch(dname='google.org')\r\n# s.whois_search()\r\n# print(s.response())\r\n# \r\n# \"\"\"Print Whois attributes returned as a list\"\"\"\r\n# print(s.creation_date())\r\n# print(s.expiry_date())\r\n# print(s.update_date())\r\n# print(s.registrant())\r\n# print(s.nameservers())\r\n#  \r\n# \"\"\" Search for multiple domains \"\"\"\r\n#from mwhois.whosearch import WhoisSearch\r\n#      \r\n#domain_list = ['google','doesnotexist123','yahoo']\r\n#  \r\n# \"\"\" deadonly will only show dead domains if set to true otherwise all domains are shown \"\"\"\r\n#m = WhoisSearch(tld='org',wordlist=domain_list, deadonly=False)\r\n# multi = m.whois_multi_search()\r\n#     \r\n# \"\"\"Returns True(1) if found or False(0) is not found\"\"\"\r\n# for i in multi:\r\n#     print i\r\n#\r\n# \"\"\" Your can also use a file as a wordlist \"\"\"\r\n# from mwhois.whosearch import WhoisSearch\r\n# \r\n# m = WhoisSearch(debug=False)\r\n# m.tld='com'\r\n# m.wordlist='./wordlist.txt'\r\n# \r\n# txt_file = m.whois_multi_search()\r\n# \r\n# \"\"\" Loop over txt_file generator and print list results containing ['status value', 'domain name']\"\"\" \r\n# for x in txt_file:\r\n#      \r\n#     domain = x[1]\r\n#      \r\n#     if x[0] == 1:\r\n#         status = 'taken'\r\n#     else:\r\n#         status = 'not taken'\r\n#      \r\n#     print('Domain %s is %s ' % (domain, status))\r\n#      \r\n# \"\"\" Loop over txt_file generator and print whois attributes\"\"\"\r\n# for x in txt_file:\r\n#     \r\n#     domain = x[1]\r\n#     \r\n#     try: \r\n#         date = m.creation_date()[0]\r\n#     except:\r\n#         date = 'N/A'\r\n#         \r\n#     print('Domain %s has creation date %s' % (domain, date))\r\n</pre>\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}